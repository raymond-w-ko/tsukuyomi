compiling:
(ns core)

IR:
NS core
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
tsukuyomi.set_active_namespace("core"); 
return true

********************************************************************************

compiling:
(ns core)

IR:
NS core
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
tsukuyomi.set_active_namespace("core"); 
return true

********************************************************************************

compiling:
(def z2ljr2jlslfl3jf 1)

IR:
DEFSYM z2ljr2jlslfl3jf := PRIMITIVE 1
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
__core.z2ljr2jlslfl3jf = 1
return true

********************************************************************************

compiling:
(ns core)

IR:
NS core
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
tsukuyomi.set_active_namespace("core"); 
return true

********************************************************************************

compiling:
(def a 3)

IR:
DEFSYM a := PRIMITIVE 3
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
__core.a = 3
return true

********************************************************************************

compiling:
(def b 4)

IR:
DEFSYM b := PRIMITIVE 4
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
__core.b = 4
return true

********************************************************************************

compiling:
(def b a)

IR:
DEFSYM b := PRIMITIVE a
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
__core.b = __core.a
return true

********************************************************************************

compiling:
(ns core)

IR:
NS core
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
tsukuyomi.set_active_namespace("core"); 
return true

********************************************************************************

compiling:
(def print (fn [obj] (_raw_ "print(tostring(obj))")))

IR:
DEFSYM print := FUNC obj
RET RAW print(tostring(obj))
ENDFUNC 
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
function __core.print(obj)
    return print(tostring(obj))
end
return true

********************************************************************************

compiling:
(def first (fn [cell] (_raw_ "cell[1]")))

IR:
DEFSYM first := FUNC cell
RET RAW cell[1]
ENDFUNC 
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
function __core.first(cell)
    return cell[1]
end
return true

********************************************************************************

compiling:
(def rest (fn [cell] (_raw_ "cell[2]")))

IR:
DEFSYM rest := FUNC cell
RET RAW cell[2]
ENDFUNC 
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
function __core.rest(cell)
    return cell[2]
end
return true

********************************************************************************

compiling:
(def second (fn [coll] (first (rest coll))))

IR:
DEFSYM second := FUNC coll
VAR __var0 := CALL rest, coll
RET CALL first, __var0
ENDFUNC 
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
function __core.second(coll)
    local __var0 = __core.rest(coll)
    return __core.first(__var0)
end
return true

********************************************************************************

compiling:
(print "asdf")

IR:
RET CALL print, "asdf"

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
return __core.print("asdf")

********************************************************************************

compiling:
(print (second (quote (42 43))))

IR:
VAR __var2 := DATA table: 0x12f4b130
VAR __var1 := CALL second, __var2
RET CALL print, __var1

Lua source code:
local tsukuyomi = tsukuyomi
local __core = tsukuyomi.get_namespace("core")
local __var2 = tsukuyomi._get_data(0)
local __var1 = __core.second(__var2)
return __core.print(__var1)

********************************************************************************

compiling:
(def user/test "lisp")

IR:
DEFSYM user/test := PRIMITIVE "lisp"
RET PRIMITIVE true

Lua source code:
local tsukuyomi = tsukuyomi
local __user = tsukuyomi.get_namespace("user")
__user.test = "lisp"
return true

********************************************************************************

